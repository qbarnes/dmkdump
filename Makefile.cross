include defines.mk product.mk

TARGET_OS ?= NATIVE
build_dir  = build

linux_targets = $(PRODUCT)
ms_targets    = $(PRODUCT).exe

BUILDS    ?= NATIVE MSDOS MSWIN32 MSWIN64

define cross_settings
$(eval $(1)_cross_os        = $(2))
$(eval $(1)_cross_arch      = $(3))
$(eval $(1)_cross_cc        = $(4))
$(eval $(1)_targets         = $(if $(subst linux,,$(2)),$$(ms_targets),\
							$$(linux_targets)))
$(eval $(1)_dir_suffix      = $$($(1)_cross_os).$$($(1)_cross_arch))
$(eval $(1)_build_dir       = $$(build_dir).$(5))
$(eval $(1)_tar_extras      = $(if $(subst msdos,,$(2)),,CWSDPMI.EXE))
$(eval $(1)_release_targz   = $(patsubst %.tar.gz,%,$(TARBALLGZ))-$(5).tar.gz)
endef

$(call cross_settings,NATIVE,linux,\
			$(shell arch),$$(CC),$$(NATIVE_dir_suffix))
$(call cross_settings,LINUX_ARM,linux,\
			armv7l,arm-linux-gnu-gcc,$$(LINUX_ARM_dir_suffix))
$(call cross_settings,MSDOS,msdos,\
			x86,i586-pc-msdosdjgpp-gcc,$$(MSDOS_cross_os))
$(call cross_settings,MSWIN32,win,x86,\
			i686-w64-mingw32-gcc,$$(MSWIN32_cross_os)32)
$(call cross_settings,MSWIN64,win,x64,\
			x86_64-w64-mingw32-gcc,$$(MSWIN64_cross_os)64)

NATIVE_CC  = $(CC)

BUILD_CMD_call = $(MAKE) \
		CC='$($(1)_cross_cc)' \
		NATIVE_CC='$(CC)' \
		build_dir='$($(1)_build_dir)' \
		targets='$($(1)_targets)' \
		prod_target='$(firstword $($(1)_targets))' \
		tar_extras='$($(1)_tar_extras)' \
		TARBALLGZ='$($(1)_release_targz)' \
		VERSION='$(VERSION)'


all release clean clobber distclean:
	$(call BUILD_CMD_call,$(TARGET_OS)) '$@'

fullrelease:
	$(foreach v,$(BUILDS),$(call BUILD_CMD_call,$v) release$(nl))


.PHONY: all release fullrelease clean clobber distclean
.DELETE_ON_ERROR:
